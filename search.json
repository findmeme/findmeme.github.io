[{"title":"力扣刷题笔记","path":"/2022/12/04/力扣刷题笔记/","content":"一份精简的力扣刷题笔记，主要用来记录自己的错误\n\n<!-- more -->\n\n## 二叉树\n\n### 450.删除二叉搜索树中的节点\n\n[力扣题目链接](https://leetcode.cn/problems/delete-node-in-a-bst/)\n\n给定一个二叉搜索树的根节点 root 和一个值 key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。\n\n一般来说，删除节点可分为两个步骤：\n\n首先找到需要删除的节点； 如果找到了，删除它。 说明： 要求算法时间复杂度为 $O(h)$，h 为树的高度。\n\n示例:\n\n![450.删除二叉搜索树中的节点](https://img-blog.csdnimg.cn/20201020171048265.png)\n\n**错误代码**\n\n```C++\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    inline bool isLeaf(TreeNode* root){\n        return root->left==nullptr && root->right==nullptr;\n    }\n    TreeNode* traversal(TreeNode* root,int key){//返回删除树key后的树根\n        if(root==nullptr)return root;\n        if(root->val<key){\n            root->right=traversal(root->right,key);\n        }else if(root->val>key){\n            root->left=traversal(root->left,key);\n        }else{//重点在这，当root的值和key相等后的操作，错误思路如下\n            //直接将右子树提上来，然后将右子树的根节点删去\n            if(isLeaf(root)){\n                delete root;\n                return nullptr;\n            }\n            if(root->right){\n                root->val=root->right->val;\n                root->right=traversal(root->right,root->val);\n            }else{\n                root->val=root->left->val;\n                root->left=traversal(root->left,root->val);\n            }\n        }\n        return root;\n    }\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        return traversal(root,key);\n    }\n};\n```\n\n会出现如下图的错误\n\n![错误思路](https://qingfang-2022.oss-cn-hangzhou.aliyuncs.com/blog/202212041351707.png)\n\n**正确思路**\n\n![450.删除二叉搜索树中的节点](https://tva1.sinaimg.cn/large/008eGmZEly1gnbj3k596mg30dq0aigyz.gif)\n\n（图片所有权-代码随想录）","tags":["算法","计算机","技术","C++"],"categories":["计算机","数据结构与算法"]},{"title":"Test","path":"/2022/11/29/test/","content":"## 这是第一段\n\n这是一张图片\n\n<img src=\"https://qingfang-2022.oss-cn-hangzhou.aliyuncs.com/blog/202212031536319.png\" alt=\"image-20221202002139490\" style=\"zoom: 33%;\" />\n\n## 这是第二段\n\n<img src=\"https://qingfang-2022.oss-cn-hangzhou.aliyuncs.com/blog/202212031536320.png\" alt=\"image-20221203151352484\" style=\"zoom: 50%;\" />"}]